---
apiVersion: iam.kubesphere.io/v1beta1
kind: User
metadata:
  name: admin
  annotations:
    iam.kubesphere.io/uninitialized: "true"
    helm.sh/resource-policy: keep
spec:
  email: admin@kubesphere.io
  password: {{ include "getOrDefaultPass" . | quote }}
status:
  state: Active

---
apiVersion: tenant.kubesphere.io/v1alpha2
kind: WorkspaceTemplate
metadata:
  annotations:
    kubesphere.io/creator: admin
    kubesphere.io/description: "system-workspace is a built-in workspace automatically created by KubeSphere. It contains all system components to run KubeSphere."
  name: system-workspace
spec:
  placement:
    clusterSelector: {}
  template:
    spec:
      manager: admin

---
apiVersion: tenant.kubesphere.io/v1alpha1
kind: Workspace
metadata:
  annotations:
    kubesphere.io/creator: admin
  name: system-workspace
spec:
  manager: admin

---
apiVersion: v1
kind: List
items:
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: GlobalRoleBinding
    metadata:
      labels:
        iam.kubesphere.io/role-ref: platform-admin
        iam.kubesphere.io/user-ref: admin
      name: admin
    roleRef:
      apiGroup: iam.kubesphere.io
      kind: GlobalRole
      name: platform-admin
    subjects:
      - apiGroup: iam.kubesphere.io
        kind: User
        name: admin
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: GlobalRoleBinding
    metadata:
      name: anonymous
    roleRef:
      apiGroup: iam.kubesphere.io
      kind: GlobalRole
      name: anonymous
    subjects:
      - apiGroup: iam.kubesphere.io
        kind: Group
        name: system:unauthenticated
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: GlobalRoleBinding
    metadata:
      name: authenticated
    roleRef:
      apiGroup: iam.kubesphere.io
      kind: GlobalRole
      name: authenticated
    subjects:
      - apiGroup: iam.kubesphere.io
        kind: Group
        name: system:authenticated
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: GlobalRoleBinding
    metadata:
      name: pre-registration
    roleRef:
      apiGroup: iam.kubesphere.io
      kind: GlobalRole
      name: pre-registration
    subjects:
      - apiGroup: iam.kubesphere.io
        kind: Group
        name: pre-registration
      - apiGroup: iam.kubesphere.io
        kind: User
        name: system:pre-registration


---
apiVersion: v1
kind: List
items:
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: GlobalRole
    metadata:
      name: anonymous
    rules:
    - nonResourceURLs:
        - /dist/*
      verbs:
        - GET
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: GlobalRole
    metadata:
      annotations:
        iam.kubesphere.io/rego-override: |-
          package authz
          default allow = false
          allow = true {
            input.Resource == "users"
            input.User.Name == input.Name
          }
          allow = true {
            allowedResources := ["clustermembers","workspacemembers","members"]
            allowedResources[_] == input.Resource
            input.User.Name == input.Name
            allowedVerbs := ["get","list","watch"]
            allowedVerbs[_] == input.Verb
          }
          allow = true {
            allowedNoneResources := ["/api","/api/v1"]
            allowedNoneResources[_] == input.Path
            input.Verb == "GET"
          }
          allow = true {
            input.APIGroup == "tenant.kubesphere.io"
            input.KubernetesRequest == false
            allowedVerbs := ["get","list","watch"]
            allowedVerbs[_] == input.Verb
          }
      name: authenticated
    rules:
      - apiGroups:
          - config.kubesphere.io
        resources:
          - configs
        verbs:
          - get
          - list
      - apiGroups:
          - iam.kubesphere.io
        resources:
          - users
          - roletemplates
          - categories
        verbs:
          - list
      - apiGroups:
          - resources.kubesphere.io
        resources:
          - registry
          - git
        verbs:
          - get
          - create
      - apiGroups:
          - resources.kubesphere.io
        resources:
          - clusters
        verbs:
          - get
          - list
      - apiGroups:
          - '*'
        resources:
          - storageclasses
          - storageclasscapabilities
          - nodes
        verbs:
          - get
          - list
      - apiGroups:
          - resources.kubesphere.io
        resources:
          - namespaces
          - services
        verbs:
          - list
      - apiGroups:
          - tenant.kubesphere.io
        resources:
          - workspacetemplates
        verbs:
          - patch
      - apiGroups:
          - extensions.kubesphere.io
        resources:
          - jsbundles
        verbs:
          - get
          - list
      - apiGroups:
          - kubesphere.io
        resources:
          - extensions
        verbs:
          - get
          - list
  - aggregationRoleTemplates:
      roleSelector:
        matchLabels:
          scope.iam.kubesphere.io/global: ""
      templateNames:
        - global-manage-clusters
        - global-view-clusters
        - global-create-workspaces
        - global-view-basic
        - global-manage-app-templates
        - global-manage-users
        - global-view-roles
        - global-manage-platform-settings
        - global-manage-workspaces
        - global-view-app-templates
        - global-view-users
        - global-manage-roles
        - global-view-workspaces
    apiVersion: iam.kubesphere.io/v1beta1
    kind: GlobalRole
    metadata:
      annotations:
        kubesphere.io/creator: admin
        kubesphere.io/description: '{"zh": "管理 KubeSphere 平台上的所有资源。", "en": "Manage all resources on the KubeSphere platform."}'
      labels:
        iam.kubesphere.io/auto-aggregate: "true"
      name: platform-admin
    rules:
      - apiGroups:
          - '*'
        resources:
          - '*'
        verbs:
          - '*'
      - nonResourceURLs:
          - '*'
        verbs:
          - '*'
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: GlobalRole
    metadata:
      annotations:
        kubesphere.io/description: '{"zh": "被邀请加入企业空间之前无法访问任何资源。", "en": "Cannot access any resources before joining a workspace."}'
        kubesphere.io/creator: admin
      labels:
        iam.kubesphere.io/auto-aggregate: "true"
      name: platform-regular
    rules: []
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: GlobalRole
    metadata:
      annotations:
        kubesphere.io/creator: admin
        kubesphere.io/description: '{"zh": "创建企业空间并成为所创建的企业空间的管理员。", "en": "Create workspaces and become an administrator of the created workspaces."}'
      labels:
        iam.kubesphere.io/auto-aggregate: "true"
      name: platform-self-provisioner
    aggregationRoleTemplates:
      templateNames:
        - global-create-workspaces
    rules:
      - apiGroups:
          - tenant.kubesphere.io
        resources:
          - workspaces
          - workspacetemplates
        verbs:
          - create
          - watch
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: GlobalRole
    metadata:
      name: pre-registration
    rules:
      - apiGroups:
          - iam.kubesphere.io
        resources:
          - users
        verbs:
          - create
          - list

---
apiVersion: v1
kind: List
items:
  - aggregationRoleTemplates:
      roleSelector:
        matchLabels:
          scope.iam.kubesphere.io/cluster: ""
      templateNames: []
    apiVersion: iam.kubesphere.io/v1beta1
    kind: ClusterRole
    metadata:
      annotations:
        kubesphere.io/creator: system
      name: cluster-admin
    rules:
      - apiGroups:
          - '*'
        resources:
          - '*'
        verbs:
          - '*'
      - nonResourceURLs:
          - '*'
        verbs:
          - '*'
  - aggregationRoleTemplates:
      roleSelector:
        matchLabels:
          iam.kubesphere.io/operation: view
      templateNames:
        - cluster-view-components
        - cluster-view-volume-snapshot-classes
        - cluster-view-volumes
        - cluster-view-roles
    apiVersion: iam.kubesphere.io/v1beta1
    kind: ClusterRole
    metadata:
      annotations:
        kubesphere.io/creator: system
      name: cluster-viewer
    rules:
      - apiGroups:
          - '*'
        resources:
          - '*'
        verbs:
          - get
          - list
          - watch
      - nonResourceURLs:
          - '*'
        verbs:
          - GET


---
apiVersion: v1
kind: List
items:
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: RoleBase
    metadata:
      labels:
        scope.iam.kubesphere.io/namespace: ""
      name: project-admin
    role:
      aggregationRoleTemplates:
        roleSelector:
          matchLabels:
            scope.iam.kubesphere.io/namespace: ""
      apiVersion: iam.kubesphere.io/v1beta1
      kind: Role
      metadata:
        annotations:
          kubesphere.io/creator: system
          kubesphere.io/description: '{"zh": "管理项目中的所有资源。", "en": "Manage all resources in the project."}'
        labels:
          iam.kubesphere.io/auto-aggregate: "true"
        name: admin
      rules:
        - apiGroups:
            - '*'
          resources:
            - '*'
          verbs:
            - '*'
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: RoleBase
    metadata:
      labels:
        scope.iam.kubesphere.io/namespace: ""
      name: project-operator
    role:
      aggregationRoleTemplates:
        roleSelector:
          matchLabels:
            iam.kubesphere.io/aggregate-to-operator: ""
            scope.iam.kubesphere.io/namespace: ""
      apiVersion: iam.kubesphere.io/v1beta1
      kind: Role
      metadata:
        annotations:
          kubesphere.io/creator: system
          kubesphere.io/description: '{"zh": "管理项目中除用户和角色之外的资源。", "en": "Manage resources other than users and roles in the project."}'
        labels:
          iam.kubesphere.io/auto-aggregate: "true"
        name: operator
      rules:
        - apiGroups:
            - '*'
          resources:
            - '*'
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - ""
            - apps
            - extensions
            - batch
            - autoscaling
            - app.k8s.io
            - operations.kubesphere.io
            - resources.kubesphere.io
            - config.istio.io
            - events.k8s.io
            - events.kubesphere.io
            - snapshot.storage.k8s.io
            - networking.k8s.io
          resources:
            - '*'
          verbs:
            - '*'
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: RoleBase
    metadata:
      labels:
        scope.iam.kubesphere.io/namespace: ""
      name: project-viewer
    role:
      aggregationRoleTemplates:
        roleSelector:
          matchLabels:
            iam.kubesphere.io/aggregate-to-viewer: ""
            scope.iam.kubesphere.io/namespace: ""
      apiVersion: iam.kubesphere.io/v1beta1
      kind: Role
      metadata:
        annotations:
          kubesphere.io/creator: system
          kubesphere.io/description: '{"zh": "查看项目中的所有资源。", "en": "View all resources in the project."}'
        labels:
          iam.kubesphere.io/auto-aggregate: "true"
        name: viewer
      rules:
        - apiGroups:
            - '*'
          resources:
            - '*'
          verbs:
            - get
            - list
            - watch
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: RoleBase
    metadata:
      name: workspace-admin
      labels:
        scope.iam.kubesphere.io/workspace: ""
    role:
      aggregationRoleTemplates:
        roleSelectors:
          - matchLabels:
              iam.kubesphere.io/aggregate-to-admin: ""
        templateNames:
          - workspace-manage-workspace-settings
          - workspace-view-workspace-settings
          - workspace-manage-projects
          - workspace-view-projects
          - workspace-create-projects
          - workspace-view-members
          - workspace-manage-members
          - workspace-manage-roles
          - workspace-view-roles
          - workspace-manage-groups
          - workspace-view-groups
      apiVersion: iam.kubesphere.io/v1beta1
      kind: WorkspaceRole
      metadata:
        annotations:
          kubesphere.io/creator: system
          kubesphere.io/description: '{"zh": "管理企业空间中的所有资源。", "en": "Manage all resources in the workspace."}'
        labels:
          iam.kubesphere.io/auto-aggregate: "true"
        name: admin
      rules:
        - apiGroups:
            - '*'
          resources:
            - '*'
          verbs:
            - '*'
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: RoleBase
    metadata:
      name: workspace-regular
      labels:
        scope.iam.kubesphere.io/workspace: ""
    role:
      aggregationRoleTemplates:
        roleSelector:
          matchLabels:
            iam.kubesphere.io/aggregate-to-regular: ""
        templateNames:
          - workspace-view-workspace-settings
      apiVersion: iam.kubesphere.io/v1beta1
      kind: WorkspaceRole
      metadata:
        annotations:
          kubesphere.io/creator: system
          kubesphere.io/description: '{"zh": "查看企业空间设置。", "en": "View workspace settings."}'
        labels:
          iam.kubesphere.io/auto-aggregate: "true"
        name: regular
      rules:
        - apiGroups:
            - '*'
          resources:
            - workspaces
            - workspacemembers
          verbs:
            - get
            - list
            - watch
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: RoleBase
    metadata:
      name: workspace-self-provisioner
      labels:
        scope.iam.kubesphere.io/workspace: ""
    role:
      aggregationRoleTemplates:
        roleSelector:
          matchLabels:
            iam.kubesphere.io/aggregate-to-self-provisioner: ""
        templateNames:
          - workspace-create-projects
          - workspace-view-workspace-settings
      apiVersion: iam.kubesphere.io/v1beta1
      kind: WorkspaceRole
      metadata:
        annotations:
          kubesphere.io/creator: system
          kubesphere.io/description: '{"zh": "查看企业设置、创建项目。", "en": "View workspace settings, create projects."}'
        labels:
          iam.kubesphere.io/auto-aggregate: "true"
        name: self-provisioner
      rules: []

  - apiVersion: iam.kubesphere.io/v1beta1
    kind: RoleBase
    metadata:
      name: workspace-viewer
      labels:
        scope.iam.kubesphere.io/workspace: ""
    role:
      aggregationRoleTemplates:
        roleSelector:
          matchLabels:
            iam.kubesphere.io/aggregate-to-viewer: ""
        templateNames:
          - workspace-view-projects
          - workspace-view-members
          - workspace-view-roles
          - workspace-view-groups
          - workspace-view-workspace-settings
      apiVersion: iam.kubesphere.io/v1beta1
      kind: WorkspaceRole
      metadata:
        annotations:
          kubesphere.io/creator: system
          kubesphere.io/description: '{"zh": "查看企业空间中的所有资源。", "en": "View all resources in the workspace."}'
        labels:
          iam.kubesphere.io/auto-aggregate: "true"
        name: viewer
      rules:
        - apiGroups:
            - '*'
          resources:
            - '*'
          verbs:
            - get
            - list
            - watch

---
apiVersion: v1
kind: List
items:
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: Category
    metadata:
      labels:
        scope.iam.kubesphere.io/cluster: ""
        scope.iam.kubesphere.io/global: ""
        scope.iam.kubesphere.io/namespace: ""
        scope.iam.kubesphere.io/workspace: ""
      name: access-control
    spec:
      displayName:
        en: Access Control
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: Category
    metadata:
      labels:
        scope.iam.kubesphere.io/global: ""
      name: cluster-management
    spec:
      displayName:
        en: Cluster Management
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: Category
    metadata:
      labels:
        scope.iam.kubesphere.io/cluster: ""
      name: cluster-resources-management
    spec:
      displayName:
        en: Cluster Resources Management
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: Category
    metadata:
      labels:
        scope.iam.kubesphere.io/cluster: ""
      name: cluster-settings
    spec:
      displayName:
        en: Cluster Settings
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: Category
    metadata:
      labels:
        scope.iam.kubesphere.io/cluster: ""
      name: network-management
    spec:
      displayName:
        en: Network Management
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: Category
    metadata:
      labels:
        scope.iam.kubesphere.io/global: ""
      name: platform-settings
    spec:
      displayName:
        en: Platform Settings
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: Category
    metadata:
      labels:
        scope.iam.kubesphere.io/cluster: ""
      name: project-resources-management
    spec:
      displayName:
        en: Project Resources Management
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: Category
    metadata:
      labels:
        scope.iam.kubesphere.io/workspace: ""
      name: projects-management
    spec:
      displayName:
        en: Projects Management
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: Category
    metadata:
      labels:
        scope.iam.kubesphere.io/cluster: ""
      name: storage-management
    spec:
      displayName:
        en: Storage Management
  - apiVersion: iam.kubesphere.io/v1beta1
    kind: Category
    metadata:
      labels:
        scope.iam.kubesphere.io/workspace: ""
      name: workspace-settings
    spec:
      displayName:
        en: Workspace Settings
