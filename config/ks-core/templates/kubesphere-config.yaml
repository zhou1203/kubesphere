{{- if .Values.config.create -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubesphere-config
  namespace: kubesphere-system
data:
  kubesphere.yaml: |
    authentication:
      authenticateRateLimiterMaxTries: {{ .Values.config.authentication.authenticateRateLimiterMaxTries | default 10 }}
      authenticateRateLimiterDuration: {{ .Values.config.authentication.authenticationRateLimiterDuration | default "10m0s" }}
      loginHistoryRetentionPeriod: {{ .Values.config.authentication.loginHistoryRetentionPeriod | default "168h"  }}
      maximumClockSkew: {{ .Values.config.authentication.maximumClockSkew | default "10s" }}
      multipleLogin: {{ .Values.config.authentication.enableMultiLogin | default true }}
      kubectlImage: {{ template "kubectl.image" . }}
{{- if eq .Values.role "host" }}
      {{- with lookup "v1" "ConfigMap" (printf "%s" .Release.Namespace) "kubesphere-config" }}
      jwtSecret: "{{ (fromYaml (index .data "kubesphere.yaml")).authentication.jwtSecret }}"
      {{- else }}
      jwtSecret: "{{ .Values.config.jwtSecret | default (randAlphaNum 32 ) }}"
      {{- end }}
{{- else }}
      jwtSecret: "{{ .Values.config.jwtSecret }}"
{{- end }}
{{- if .Values.config.authentication.oauthOptions }}
      {{- with .Values.config.authentication.oauthOptions }}
      oauthOptions:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- else if eq (default .Values.role "none") "member" }}
      oauthOptions:
        accessTokenMaxAge: 0
{{- end }}
    multicluster:
      clusterRole: {{ .Values.role }}
{{- end }}
